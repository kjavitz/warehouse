
<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php /* @var $this Mage_Adminhtml_Block_Catalog_Product_Composite_Fieldset_Options */ ?>
<?php $options = Mage::helper('core')->decorateArray($this->getOptions()); ?>

<?php $noDates = false; ?>
<?php if (Mage::getSingleton('core/session')->getData('startDateInitial')): ?>
    <?php $startDateInitArr = explode(' ', Mage::getSingleton('core/session')->getData('startDateInitial')); ?>
    <?php $start_date = date('Y-m-d', strtotime($startDateInitArr[0])); ?>
    <?php if (isset($startDateInitArr[1])): ?>
        <?php $startTimeInit = $startDateInitArr[1]; ?>
    <?php else: ?>
        <?php $startTimeInit = ''; ?>
    <?php endif; ?>

    <?php $endDateInitArr = explode(' ', Mage::getSingleton('core/session')->getData('endDateInitial')); ?>
    <?php $end_date = date('Y-m-d', strtotime($endDateInitArr[0])); ?>
    <?php if (isset($endDateInitArr[1])): ?>
        <?php $endTimeInit = $endDateInitArr[1]; ?>
    <?php else: ?>
        <?php $endTimeInit = ''; ?>
    <?php endif; ?>

<?php else: ?>
    <?php $start_date = (date('Y-m-d')); ?>
    <?php $end_date = (date('Y-m-d')); ?>
    <?php $startTimeInit = ''; ?>
    <?php $endTimeInit = ''; ?>
    <?php $noDates = true; ?>
<?php endif; ?>

<?php $quoteItemId = (int)$this->getRequest()->getParam('id'); ?>
<?php if ($quoteItemId): ?>
    <?php $quoteItem = Mage::getModel('sales/quote_item')->load($quoteItemId); ?>
    <?php if ($quoteItem->getId()): ?>
        <?php $optionCollection = Mage::getModel('sales/quote_item_option')->getCollection()->addItemFilter(array($quoteItemId)); ?>
        <?php $quoteItem->setOptions($optionCollection->getOptionsByItem($quoteItem)); ?>
        <?php $buyRequest = $quoteItem->getBuyRequest(); ?>
        <?php if ($noDates): ?>
            <?php $start_date = ($buyRequest->getStartDate() != '') ? $buyRequest->getStartDate() : $start_date; ?>
            <?php $end_date = ($buyRequest->getEndDate() != '') ? $buyRequest->getEndDate() : $end_date; ?>
        <?php endif; ?>
        <?php $quoteItemId = $quoteItem->getProductId(); ?>
    <?php endif; ?>
<?php else: ?>
    <?php $quoteItemId = -1; ?>
<?php endif; ?>

<?php $storeOpen = Mage::getStoreConfig(ITwebexperts_Payperrentals_Helper_Data::XML_PATH_STORE_OPEN_TIME); ?>
<?php $storeClose = Mage::getStoreConfig(ITwebexperts_Payperrentals_Helper_Data::XML_PATH_STORE_CLOSE_TIME); ?>
<?php if ($quoteItemId): ?>
    <?php $useTimes = ITwebexperts_Payperrentals_Helper_Data::useTimes($this->getProduct()); ?>

<?php else: ?>
    <?php $useTimes = 0; ?>
<?php endif; ?>

<?php $excludeHoursStart = array(); ?>
<?php $excludeHoursEnd = array(); ?>
<?php $exludeMinutesStart = array(); ?>
<?php $exludeMinutesEnd = array(); ?>

<div id="calendarTable<?php echo $quoteItemId; ?>">
    <input type="hidden" name="configurate-product-id" value="<?php echo $this->getProduct()->getId() ?>">

    <div class="datesInputs">
        <div style="display: inline-block;margin-right:30px;">
            <?php echo $this->__('From'); ?>
            <input type="text" readonly="readonly" name="start_date" class="start_date" value="<?php echo date('Y-m-d H:i:s', strtotime($start_date . ' ' . $startTimeInit)); ?>">
        </div>
        <div style="display: inline-block;">
            <?php echo $this->__('To'); ?>
            <input type="text" readonly="readonly" name="end_date" class="end_date" value="<?php echo date('Y-m-d H:i:s', strtotime($end_date . ' ' . $endTimeInit)); ?>">
        </div>
    </div>
    <?php $hourStart = Mage::helper('payperrentals/timebox')->getTimeInput('start_time', $storeOpen, $storeClose, $excludeHoursStart, $startTimeInit); ?>
    <?php $hourEnd = Mage::helper('payperrentals/timebox')->getTimeInput('end_time', $storeOpen, $storeClose, $excludeHoursEnd, $endTimeInit); ?>
    <div class="datesSelector">
        <div class="dateStartLine">
            <div class="date-line">
                <label><?php echo $this->__('Start Date:'); ?></label>
                <input type="text" readonly="readonly" name="read_start_date" class="readStartDate" value="<?php echo date('Y-m-d', strtotime($start_date)); ?>"/>
            </div>
            <?php if ($useTimes > 0): ?>
                <div class="time-line">
                    <?php echo $this->__('Start Time:') . $hourStart; ?>
                </div>
            <?php endif; ?>
        </div>
        <div class="dateEndLine">
            <div class="date-line">
                <label><?php echo $this->__('End Date:'); ?></label>
                <input type="text" readonly="readonly" name="read_end_date" class="readEndDate" value="<?php echo date('Y-m-d', strtotime($end_date)); ?>"/>
            </div>
            <?php if ($useTimes > 0): ?>
                <div class="time-line">
                    <?php echo $this->__('End Time:') . ' ' . $hourEnd; ?>
                </div>
            <?php endif; ?>
        </div>
    </div>
    <div class="priceList" style="margin-top:10px;"> Price List:<br/>
        <?php echo ITwebexperts_Payperrentals_Helper_Price::getPriceListHtml($this->getProduct(), Mage::getStoreConfig(ITwebexperts_Payperrentals_Helper_Data::XML_PATH_PRICING_ON_LISTING)); ?>
    </div>
    <div class="datesPrice" style="margin-top:10px;font-weight: bold;"></div>
</div>
<div id="product-item-warehouse<?php echo $quoteItemId;?>" class="product-item-warehouse">
    <?php /** @var $helper ITwebexperts_PPRWarehouse_Helper_Data */ ?>
    <?php $helper = Mage::helper('pprwarehouse'); ?>
    <?php $quote = isset($quoteItem) && $quoteItem->getId() ? $quoteItem->getQuote() : Mage::getSingleton('adminhtml/session_quote')->getQuote() ?>
    <?php $validStockIds = $helper->getValidStockIds($quote) ?>
    <?php /** @var $warehouseHelper Innoexts_Warehouse_Helper_Data */ ?>
    <?php $warehouseHelper = Mage::helper('warehouse') ?>
    <?php $currentStockId = isset($quoteItem) ? $quoteItem->getStockId() : null ?>
    <select name="stock_id">
        <?php foreach($validStockIds as $stockId): ?>
            <?php $warehouse = $warehouseHelper->getWarehouseTitleByStockId($stockId) ?>
            <option value="<?php echo $stockId ?>" <?php if($currentStockId == $stockId): ?>selected="selected" <?php endif ?>><?php echo $this->escapeHtml($warehouse) ?></option>
        <?php endforeach ?>
    </select>
</div>
<?php if (count($options)): ?>

    <?php echo $this->getChildHtml('options_js') ?>

    <div id="product_composite_configure_fields_options" class="<?php echo $this->getIsLastFieldset() ? 'last-fieldset' : '' ?>">
        <h4><?php echo Mage::helper('payperrentals')->__('Custom Options') ?></h4>

        <div class="product-options">
            <dl>
                <?php foreach ($options as $option): ?>
                    <?php echo $this->getOptionHtml($option); ?>
                <?php endforeach; ?>
            </dl>
        </div>
    </div>

<?php endif; ?>
<script type="text/javascript">
//<![CDATA[
var noPriceMessage = '<?php echo $this->__('No price is available for these rental periods');?>';
var noQtyMessage = '<?php echo $this->__('No quantity available for these rental periods');?>';
//$jppr(document).ready(function(){
function calculatePrice1($selfID) {
    //showAjaxLoader($selfID.find('.priceQuote'));
    var qtyDisabledArr = [];
    $jppr('.qty-disabled').each(function () {
        qtyDisabledArr.push($jppr(this).attr('id'));
        $jppr(this).removeAttr('disabled');
    });
    if (typeof bundle !== 'undefined') {
        for (var option in bundle.config.selected) {
            if (bundle.config.options[option]) {
                for (var i = 0; i < bundle.config.selected[option].length; i++) {
                    if (bundle.config.options[option].selections[bundle.config.selected[option][i]].typeid == 'reservation') {
                        //alert( $jppr('input[name="bundle_option_qty['+option+']"]').attr('id'));
                        $jppr('input[name="bundle_option_qty[' + option + ']"]').attr('onblur', '');
                        $jppr('input[name="bundle_option_qty[' + option + ']"]').attr('onkeyup', '');
                    }
                }
            }
        }
    }
    //here I create new function getpriceandavailability, if data.not available ok button is disabled.
    //the function is called on date selection and qty changed

    $jppr.ajax({
        cache: false,
        dataType: 'json',
        type: 'post',
        url: '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/getpriceandavailability/",array('product_id'=>$this->getProduct()->getId(),'form_key'=> Mage::getSingleton('core/session')->getFormKey()))?>',
        data: $selfID.closest('form').find('*').serialize(),
        success: function (data) {
            /*for(var i1=0;i1<qtyDisabledArr.length;i1++){
             $jppr('#'+qtyDisabledArr[i1]).attr('disabled','disabled');
             }*/

            $jppr('.qty-disabled').each(function () {
                $jppr(this).attr('disabled', 'disabled');
            });
            if (data.amount >= 0) {
                //opConfig.reloadPrice();
                //removeAjaxLoader($selfID.find('.priceQuote'));
                $selfID.find('.datesPrice').html('Price for selected dates: ' + data.formatAmount);
            } else {
                $selfID.find('.datesPrice').html('No Price for the selected dates');
            }

            //show current stock and remaining stock?
            $selfID.find('.datesPrice').html(data.stockAvailText + data.stockRestText + $selfID.find('.datesPrice').html());

            if (data.amount == -1 || data.available == false) {
                $jppr('.buttons-set button[type="submit"]').hide();

                if (data.available == false && data.maxqty != $jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('input[name="qty"]').first().val() && data.maxqty > 0) {
                    /*$jppr('#calendarTable
                    <?php /*echo $quoteItemId;*/?>').parent().find('input[name="qty"]').first().val(data.maxqty);
                     $jppr('#calendarTable
                    <?php /*echo $quoteItemId;*/?>').parent().find('.qtycheck').trigger('click');*/

                    $selfID.find('.datesPrice').html(noQtyMessage);
                } else {
                    $selfID.find('.datesPrice').html(noPriceMessage);
                }
            } else {
                $jppr('.buttons-set button[type="submit"]').show();
            }
        }
    });
    /*var dateObj1 = new Date($selfID.find('.start_date').val());
     var startDateFormatted = $jppr.formatDateTime('mm/dd/y g:ii a', dateObj1);
     var dateObj2 = new Date($selfID.find('.end_date').val());
     var endDateFormatted =$jppr.formatDateTime('mm/dd/y g:ii a', dateObj2);
     $selfID.find('.datesShow').html(startDateHtml+startDateFormatted+'<br/>'+endDateHtml+endDateFormatted);*/
}


function updateInputVals($selfID) {
    /*date1 = $selfID.find('.start_date').val().split(' ');
     date2 = $selfID.find('.end_date').val().split(' ');*/
    var startDate = $selfID.find('.readStartDate').val();
    var endDate = $selfID.find('.readEndDate').val();

    /*if ($selfID.find('.start_time').length > 0 && $selfID.find('.end_time').length > 0) {
     $selfID.find('.start_date').val(date1[0] + ' ' + $selfID.find('.start_time').val());
     $selfID.find('.end_date').val(date2[0] + ' ' + $selfID.find('.end_time').val());
     }*/
    var startTimeInput = $selfID.find('.start_time');
    var startTime = startTimeInput.length ? startTimeInput.val() : '00:00:00';
    var endTimeInput = $selfID.find('.end_time');
    var endTime = endTimeInput.length ? endTimeInput.val() : '00:00:00';
    $selfID.find('.start_date').val(startDate + ' ' + startTime);
    $selfID.find('.end_date').val(endDate + ' ' + endTime);
    calculatePrice1($selfID);
}

$jppr('#calendarTable<?php echo $quoteItemId;?> .readStartDate, #calendarTable<?php echo $quoteItemId;?> .readEndDate').Zebra_DatePicker({
    offset: [-150, 284],
    onSelect: function (date1, date2, date3) {
        var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
        $selfID.find('.start_date').val(date2);
        //$selfID.find('.readStartDate').val(date2);
        updateInputVals($selfID);
    }
});
$jppr('.Zebra_DatePicker').css('z-index', '10000');
$jppr('.Zebra_DatePicker_Icon').each(function (element) {
    $jppr(this).attr('style', '');
});
$jppr('#product_composite_configure_fields_qty').css('margin-top', '15px');
$jppr('#calendarTable<?php echo $quoteItemId;?> .start_time, #calendarTable<?php echo $quoteItemId;?> .end_time').live('change', function (event) {
    var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
    updateInputVals($selfID);
    event.stopImmediatePropagation();
});

$jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('input[name="qty"]').first().val(1);

$jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('input[name="qty"]').first().keydown(function (event) {
    $jppr('.buttons-set button[type="submit"]').hide();
});
$jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('input[name="qty"]').first().change(function (event) {
    $jppr('.buttons-set button[type="submit"]').hide();
    if ($jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('.qtycheck').length == 0) {
        $jppr('<dt style="margin-top: 10px"><div class="form-button qtycheck" style="width:160px;"><span><span>Check Price and availability</span></span></div></dt>').insertAfter($jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('input[name="qty"]').first().parent());
    }
    $jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('.qtycheck').click(function (event) {
        var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
        updateInputVals($selfID);
        event.stopImmediatePropagation();
    });
    $jppr('#calendarTable<?php echo $quoteItemId;?>').parent().find('.qtycheck').trigger('click');
    event.stopImmediatePropagation();
});
$jppr('input[name^="bundle_option"]').change(function () {
    var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
    updateInputVals($selfID);
});

$jppr('input[name^="options"]').change(function () {
    var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
    updateInputVals($selfID);
});
<?php if($startTimeInit != ''):	?>
$jppr('#calendarTable<?php echo $quoteItemId;?>').find('.start_time option[value="<?php echo $startTimeInit;?>"]').attr("selected", "selected");
$jppr('#calendarTable<?php echo $quoteItemId;?>').find('.end_time option[value="<?php echo $endTimeInit;?>"]').attr("selected", "selected");
<?php endif; ?>


/** Initialize keydown event for qty field */
$jppr('<?php echo $quoteItemId; ?>').parent().find('input[name="qty"]').first().trigger('keydown');


function calculatePrice($selfID) {
    var qtyDisabledArr = [];
    $jppr('.qty-disabled').each(function () {
        qtyDisabledArr.push($jppr(this).attr('id'));
        $jppr(this).removeAttr('disabled');
    });
    if (typeof bundle !== 'undefined') {
        for (var option in bundle.config.selected) {
            if (bundle.config.options[option]) {
                for (var i = 0; i < bundle.config.selected[option].length; i++) {
                    if (bundle.config.options[option].selections[bundle.config.selected[option][i]].typeid == 'reservation') {
                        //alert( $jppr('input[name="bundle_option_qty['+option+']"]').attr('id'));
                        $jppr('input[name="bundle_option_qty[' + option + ']"]').attr('onblur', '');
                        $jppr('input[name="bundle_option_qty[' + option + ']"]').attr('onkeyup', '');
                    }
                }
            }
        }
    }
    $jppr.ajax({
        cache: false,
        dataType: 'json',
        type: 'post',
        url: '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/getprice/",array('product_id'=>$quoteItemId,'saveDates'=>'1','form_key'=> Mage::getSingleton('core/session')->getFormKey())) ?>',
        data: $selfID.closest('form').find('*').serialize(),
        success: function (data) {

            $jppr('.qty-disabled').each(function () {
                $jppr(this).attr('disabled', 'disabled');
            });
            productConfigure.onConfirmBtn();

            $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.price').html(data.formatAmount);
            $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.currentstock').html(data.stockAvail);
            $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.remainingstock').html(data.stockRest);
            $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.qty').change(function () {
                $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.remainingstock').html($jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().find('.currentstock').html() - $jppr(this).val());
            });

        }
    });
}

$jppr('.buttons-set button[type="submit"]').click(function (event) {

    var $selfID = $jppr('#calendarTable<?php echo $quoteItemId;?>');
    //var start_date = $selfID.find('.start_date');
    //var end_date = $selfID.find('.end_date');
    if ($selfID.closest('form').find('*').serialize() != '') {
        calculatePrice($selfID);
        event.stopImmediatePropagation();
    }
    return false;
});
//]]>
</script>
